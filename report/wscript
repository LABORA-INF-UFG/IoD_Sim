# -*- Mode: python; py-indent-offset: 4; indent-tabs-mode: nil; coding: utf-8; -*-

# def options(opt):
#     pass

# def configure(conf):
#     conf.check_nonfatal(header_name='stdint.h', define_name='HAVE_STDINT_H')

def build(bld):
    module = bld.create_ns3_module('report', ['core'])
    module.source = [
            'model/drone-control-layer.cc',
            'model/ipv4-layer.cc',
            'model/report-container.cc',
            'model/report-data-stats.cc',
            'model/report-drone.cc',
            'model/report-entity.cc',
            'model/report-location.cc',
            'model/report-protocol-stack.cc',
            'model/report-simulation.cc',
            'model/report-transfer.cc',
            'model/report-zsp.cc',
            'model/report.cc',
            'model/simulation-duration.cc',
            'model/transfer-direction.cc',
            'model/wifi-inspector.cc',
            'model/wifi-mac-layer.cc',
            'model/wifi-phy-layer.cc',
            'helper/report-helper.cc'
        ]

    module.use.append('LIBXML2')

    #module_test = bld.create_ns3_module_test_library('drone')
    #module_test.source = [
    #    ]

    headers = bld(features='ns3header')
    headers.module = 'report'
    headers.source = [
            'model/report.h',
            'helper/report-helper.h'
        ]

    #if bld.env.ENABLE_EXAMPLES:
    #    bld.recurse('examples')

    # bld.ns3_python_bindings()
