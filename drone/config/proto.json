{
  "globalSettings": [
    "ns3::LteHelper::PathlossModel", "ns3::HybridBuildingsPropagationLossModel",
    "ns3::BuildingsPropagationLossModel::ShadowSigmaOutdoor", "6.0",
    "ns3::BuildingsPropagationLossModel::ShadowSigmaIndoor", "8.0",
    "ns3::BuildingsPropagationLossModel::ShadowSigmaExtWalls", "5.0"
  ],

  "networks": [
    {
      "name": "lte_net0",
      "protocol": "lte",
      "attributes": [
        "ns3::LteHelper::Scheduler", "ns3::PfFfMacScheduler",
        "ns3::PfFfMacScheduler::HarqEnabled", "true",
        "ns3::PfFfMacScheduler::CqiTimerThreshold", "1000",
        "ns3::PointToPointNetDevice::DataRate", "100Gb/s",
        "ns3::PointToPointNetDevice::Mtu", "1500",
        "ns3::PointToPointChannel::Delay", "10ms"
      ]
    }
  ],

  "antennas": [
    {
      "name": "antenna_0",
      "position": [0.0, 0.0, 50.0],
      "interfaces": ["lte_net0"]
    },
    {
      "name": "antenna_1",
      "position": [0.0, 10.0, 50.0],
      "interfaces": [0]
    }
  ],

  "dronesMobilityModel": "mixed",
  "drones": [
    {
      "name": "drone1",
      "mobilityModel": "ns3::ConstantPositionMobilityModel",
      "position": [100.0, 0.0, 10.0],
      "applicationStartTime": 1.0,
      "applicationStopTime": 9.0,
      "interfaces": [0]
    },
    {
      "name": "drone2",
      "mobilityModel": "ns3::ConstantPositionMobilityModel",
      "position": [50.0, 0.0, 50.0],
      "applicationStartTime": 1.1,
      "applicationStopTime": 9.0,
      "interfaces": ["lte_net0"]
    }
  ],

  "remotes": [
    {
      "name": "remote1",
      "applicationStartTime": 0.5,
      "applicationStopTime": 9.5
    },
    {
      "name": "remote2",
      "applicationStartTime": 0.5,
      "applicationStopTime": 9.5
    }
  ],

  "buildings": [
    {
        "type": "residential",
        "walls": "concreteWithWindows",
        "boundaries": [10.0, 30.0, 10.0, 30.0, 0.0, 50.0],
        "floors": 12,
        "rooms": [2, 2]
    }
  ],

  "duration": 10.0,
  "logOnFile": false,
  "logComponents": [
    "DroneServer",
    "DroneClient",
    "ScenarioConfigurationHelper",
    "DroneScenarioHelper",
    "DroneNetwork"
  ]
}