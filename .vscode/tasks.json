{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Integrate IoD Sim with ns3",
      "type": "shell",
      "command": "./tools/prepare-ns3.sh",
      "problemMatcher": []
    },
    {
      "label": "configure",
      "type": "shell",
      "command": "./waf configure --enable-examples --enable-mpi --disable-python --enable-modules=drone",
      "options": {
        "cwd": "${workspaceFolder}/ns3/"
      },
      "group": "build",
      "problemMatcher": []
    },
    {
      "label": "build",
      "type": "shell",
      "command": "./waf build -j$(grep -c ^processor /proc/cpuinfo)",
      "options": {
        "cwd": "${workspaceFolder}/ns3/"
      },
      "group": "build",
      "problemMatcher": [
        "$gcc"
      ]
    },
    {
      "label": "Cleanup results directory",
      "type": "shell",
      "command": "rm -rf ./results/*",
      "group": "none",
      "problemMatcher": []
    },
    {
      "label": "Cleanup Build",
      "type": "shell",
      "command": "./waf clean",
      "options": {
        "cwd": "${workspaceFolder}/ns3"
      },
      "group": "none",
      "problemMatcher": []
    },
    {
      "label": "Run IoD Sim",
      "type": "shell",
      "command": "./waf --run \"iod-sim --config=${input:configFileGeneralPurpose}\"",
      "options": {
        "cwd": "${workspaceFolder}/ns3"
      },
      "group": "test"
    },
    {
      "label": "Profile IoD Sim",
      "type": "shell",
      "command": "valgrind --tool=callgrind ${workspaceFolder}/ns3/build/src/drone/examples/ns3.33-iod-sim-debug --config=${input:configFileGeneralPurpose}",
      "options": {
        "cwd": "${workspaceFolder}/ns3",
        "env": {
          "LD_LIBRARY_PATH": "${workspaceFolder}/ns3/build/lib/"
        }
      },
      "group": "test"
    },
    {
      "label": "docs",
      "type": "shell",
      "command": "make html",
      "options": {
        "cwd": "${workspaceFolder}/docs"
      },
      "windows": {
        "command": "./make.bat html",
        "options": {
          "cwd": "${workspaceFolder}/docs"
        }
      },
      "group": "build"
    },
    {
      "label": "docs (venv)",
      "type": "shell",
      "command": "make html",
      "options": {
        "cwd": "${workspaceFolder}/docs",
        "env": {
          "SPHINXBUILD": "${workspaceFolder}/venv/Scripts/sphinx-build"
        }
      },
      "windows": {
        "command": "./make.bat html",
        "options": {
          "cwd": "${workspaceFolder}/docs",
          "env": {
            "SPHINXBUILD": "${workspaceFolder}\\venv\\Scripts\\sphinx-build.exe"
          }
        }
      },
      "group": "build",
      "dependsOn": [
        "docs (venv) - clean"
      ]
    },
    {
      "label": "docs (venv) - clean",
      "type": "shell",
      "command": "make clean",
      "options": {
        "cwd": "${workspaceFolder}/docs",
        "env": {
          "SPHINXBUILD": "${workspaceFolder}/venv/Scripts/sphinx-build"
        }
      },
      "windows": {
        "command": "./make.bat clean",
        "options": {
          "cwd": "${workspaceFolder}/docs",
          "env": {
            "SPHINXBUILD": "${workspaceFolder}\\venv\\Scripts\\sphinx-build.exe"
          }
        }
      }
    },
    {
      "label": "docs (venv) - open",
      "type": "shell",
      "command": "xdg-open ./_build/html/index.html",
      "options": {
        "cwd": "${workspaceFolder}/docs"
      },
      "windows": {
        "command": ".\\_build\\html\\index.html",
        "options": {
          "cwd": "${workspaceFolder}\\docs"
        }
      },
      "dependsOn": [
        "docs (venv)"
      ]
    }
  ],

  "inputs": [
    {
      "id": "numDrones",
      "type": "promptString",
      "description": "Number of drones to simulate",
      "default": "1"
    },
    {
      "id": "duration",
      "type": "promptString",
      "description": "Duration of this simulation, in seconds",
      "default": "10"
    },
    {
      "id": "scenario",
      "type": "promptString",
      "description": "Name of the scenario to run",
      "default": "test-scenario"
    },
    {
      "id": "opt_args",
      "type": "promptString",
      "description": "Optional arguments to pass to waf command",
      "default": "--cwd=../results/"
    },
    {
      "id": "opt_scenArgs",
      "type": "promptString",
      "description": "Optional arguments to pass to the scenario script",
      "default": "--config=../drone/config/test.json"
    },
    {
      "id": "opt_nextCmd",
      "type": "promptString",
      "description": "Optional next command (piping, output redirection, etc...)",
      "default": "> ../results/`date +%y%m%d-%H%M`.out 2>&1"
    },
    {
      "id": "configFileDaVinci",
      "type": "promptString",
      "description": "Path to configuration file for this scenario",
      "default": "./src/drone/config/davinci.json"
    },
    {
      "id": "configFileDaVinciDroneclass",
      "type": "promptString",
      "description": "Path to configuration file for this scenario",
      "default": "./src/drone/config/davinci-droneclass.json"
    },
    {
      "id": "configFileLte",
      "type": "promptString",
      "description": "Path to configuration file for this scenario",
      "default": "./src/drone/config/lte-scenario.json"
    },
    {
      "id": "configFileEasley",
      "type": "promptString",
      "description": "Path to configuration file for this scenario",
      "default": "./src/drone/config/easley.json"
    },
    {
      "id": "configFileGeneralPurpose",
      "type": "promptString",
      "description": "Path to configuration file for this scenario",
      "default": "./src/drone/config/simple_wifi.json"
    },
    {
      "id": "configFileLteBasic",
      "type": "promptString",
      "description": "Path to configuration file for this scenario",
      "default": "./src/drone/config/LTE-basic.json"
    },
    {
      "id": "configFileDroneScenario",
      "type": "promptString",
      "description": "Path to configuration file for this scenario",
      "default": "proto"
    },
    {
      "id": "nameDroneScenario",
      "type": "promptString",
      "description": "Name of the scenario",
      "default": "DRONE_SCENARIO"
    },
    {
      "id": "radioMapDroneScenario",
      "type": "promptString",
      "description": "Generate the Radio Environment Map",
      "default": "false"
    },
    {
      "id": "configFileDebug",
      "type": "promptString",
      "description": "Path to configuration file for this scenario",
      "default": "./src/drone/config/proto.json"
    }
  ]
}
